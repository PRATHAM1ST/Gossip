// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}


// ER Diagram generator
generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  // url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id               String              @id @default(uuid())
  joinedAt         DateTime            @default(now())
  accessedAt       DateTime            @updatedAt
  name             String
  email            String              @unique
  views            View[]
  PostReaction     PostReaction[]
}

model ReactionsList {
  id                String              @id @default(uuid())
  emojie            String              @unique
  description       String              @unique
  lastUsedAt        DateTime            @updatedAt
  totalUsed         Int                 @default(0)
  PostReaction  PostReaction[]

  @@unique([emojie, id])
}

model PostReaction {
  id         String         @id @default(uuid())
  user       User           @relation(fields: [userId], references: [id])
  userId     String
  post       Post           @relation(fields: [postId], references: [id])
  postId     String
  reaction   ReactionsList  @relation(fields: [reactionId, emojie], references: [id, emojie])
  reactionId String
  emojie     String
}

model Post {
  id                String              @id @default(uuid())
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  title             String
  content           String
  backgroundEmoji   String
  views             View[]
  totalReactions    Int                 @default(0)
  reactions         PostReaction[]
  reports           Report[]
  images            Json[]              @default([])
}

model Report {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  reason    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
}

model View {
  id     String @id @default(uuid())
  post   Post   @relation(fields: [postId], references: [id])
  postId String
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Temp {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imageData Json
}
